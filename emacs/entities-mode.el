;;; entities-mode.el --- Major mode for the "entities" xtext example language -*- lexical-binding: t; -*-

;; Copyright (C) 2019-2021  Rudolf Schlatte

;; Author: Rudi Schlatte <rudi@constantly.at>
;; Package-Requires: ((lsp-mode "6.0") (eglot "1.7"))
;; Keywords: languages

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, version 3.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:

;; A small major mode for the "entities" example language as described in
;; Chapter 2 of "Implementing Domain-Specific Languages with Xtext and Xtend"
;; (2nd edition, Lorenzo Bettini).
;;
;; The main purpose of this mode is to demonstrate how to connect a language
;; server generated by Xtext (http://www.eclipse.org/Xtext/) to Emacs'
;; lsp-mode (https://github.com/emacs-lsp/lsp-mode).
;;
;; Note that we require both lsp-mode and eglot.  This is done for
;; demonstration purposes; you'd want to use one or the other in your Emacs,
;; but ideally support both in any major mode you write.

(defconst entities-keywords
  (regexp-opt
   '("entity" "extends"))
  "List of keywords of the entities language.")

(defconst entities-types
  (regexp-opt '("string" "int" "boolean"))
  "List of standard types of the entities language.")

(defvar entities-font-lock-keywords
  (list
   (cons entities-keywords 'font-lock-keyword-face)
   (cons entities-types 'font-lock-type-face)))

(defvar entities-ls-jar
  ;; Should be something like "/home/user/source/entities.parent/entities.ide/build/libs/entities.ide-1.0.0-SNAPSHOT-ls.jar"
  (expand-file-name "../entities.ide/build/libs/entities.ide-1.0.0-SNAPSHOT-ls.jar"
                    (when load-file-name (file-name-directory load-file-name))))

;;;###autoload
(define-derived-mode entities-mode prog-mode "Entities"
  "Major mode for editing entities files.

The hook `prog-mode-hook' is run during initialization, then
`entities-mode-hook'.

The following keys are set:
\\{entities-mode-map}"
  (setq font-lock-defaults '(entities-font-lock-keywords))
  (setq-local comment-use-syntax t)
  (setq-local comment-start "//")
  (setq-local comment-end "")
  (setq-local comment-start-skip "//+\\s-*"))

;; `entities-mode-syntax-table' is created by the `define-derived-mode' form
;; above, so here we can modify it to teach it about comments.
(modify-syntax-entry ?/   ". 124" entities-mode-syntax-table)
(modify-syntax-entry ?*   ". 23b" entities-mode-syntax-table)
(modify-syntax-entry ?\n  ">" entities-mode-syntax-table)
(modify-syntax-entry ?\^m ">" entities-mode-syntax-table)


;;;###autoload
(add-to-list 'auto-mode-alist '("\\.entities\\'" . entities-mode))

;;;###autoload
(when (featurep 'lsp-mode)
  ;; https://emacs-lsp.github.io/lsp-mode/page/adding-new-language/
  (add-to-list 'lsp-language-id-configuration
               '(entities-mode . "entities"))
  (lsp-register-client
   (make-lsp-client :major-modes '(entities-mode)
                    :server-id 'entities-ls
                    :new-connection (lsp-stdio-connection (list "java" "-jar" entities-ls-jar)))))

;;;###autoload
(when (featurep 'eglot)
  ;; https://github.com/joaotavora/eglot#connecting-to-a-server
  (add-to-list 'eglot-server-programs `(entities-mode . ("java" "-jar" ,entities-ls-jar))))

(provide 'entities-mode)
